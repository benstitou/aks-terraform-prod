apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging-01
spec:
  acme:
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: <EMAIL_ADDRESS>
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Secret resource that will be used to store the account's private key.
      name: staging-issuer-account-key-01
    # Add a single challenge solver, HTTP01 using nginx
    solvers:
    - http01:
        ingress:
          ingressClassName: ingress-nginx

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod-01
spec:
  acme:
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: <EMAIL_ADDRESS>
    # use the prod url for real prod env : https://acme-v02.api.letsencrypt.org/directory
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Secret resource that will be used to store the account's private key.
      name: prod-issuer-account-key-01
    # Add a single challenge solver, HTTP01 using nginx
    solvers:
    - http01:
        ingress:
          ingressClassName: ingress-nginx

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-example-01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cert-manager-example-01
  template:
    metadata:
      labels:
        app: cert-manager-example-01
    spec:
      containers:
      - name: cert-manager-example-01
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        ports:
          - name: http
            containerPort: 80
        env:
        - name: TITLE
          value: "Welcome to Azure Kubernetes Service (AKS) with Cert Manager"

---

kind: Service
apiVersion: v1
metadata:
  name: cert-manager-example-01-svc
spec:
  selector:
    app: cert-manager-example-01
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name:  cert-manager-example-ingress-01
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-01
spec:
  ingressClassName: ingress-nginx
  rules:
    - host: myingress.<YOUR_DOMAIN>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cert-manager-example-01-svc
                port:
                  number: 80
  tls:
    - hosts:
        - myingress.<YOUR_DOMAIN>
      secretName: prod-issuer-account-key-01

